//Getting inbox
			/*
			s = "/v2.3/me/inbox";
			var j = 0;
			var str = "";
			//var to;
			//var from;
			
			FB.api(s, doSomethingForInbox);
			
			function doSomethingForInbox(response) {
				if (response && !response.error) {
					var i = 0;
					//var str = "";
					//console.log("GOING through the response!!!");
					//Works for individual but not together :/
					//while(i < 3) {
					while(response.data[i]) {
						//var name = response.data[i].name + '\n';
						//console.log(i);
						
						var to = response.data[i]['to']['data'][0]['name'];
						var from = response.data[i]['to']['data'][1]['name'];
					
						str = to + " " + from + "\n";
						
						console.log("Writing file");
						fs.appendFile('./log/messagesPeople.txt', str, function (err) {
								if (err) {
									return console.log(err);
								}
						});
						
						while(response.data[i]['comments']['data'][j]) {
							j++;
						}
						
						console.log(to + " " + from + " " + j);
						//console.log(response.data[i]['comments']['paging']['next']);

						//if (response.data[i]['comments']["paging"] && response.data[i]['comments']["paging"]["next"]) {
							//console.log("FLASLSLDASFAS");
						var url = response.data[i]['comments']["paging"]["next"].split("https://graph.facebook.com");
						s = url[1];
						console.log("Going to next page");
						console.log(s);
						//FB.setAccessToken(token);
						//process.nextTick(function() {
							FB.setAccessToken(refreshToken);
							FB.api(s, doSomethingelseForInbox);
						//});
							
						//}
						
						i++;
					}
					
					
					console.log("Writing file");
					fs.appendFile('./log/messagesPaginated.txt', str, function (err) {
							if (err) {
								return console.log(err);
							}
					});
					
				} else {
					//Print out error message
					console.log(response);
				}
				
			}*/
			
			//Writing messages
			/*
			function doSomethingelseForInbox(response) {
				if (response.data && !response.error) {
					var i = 0;
					var str = "";
					//console.log("GOING through the response!!!");
					console.log(response.data);
					var k = 0;
					
					while(response.data[k]) {
						j++;
						k++;
					}
					
					//console.log(response.data[i]);
					if (response["paging"] && response["paging"]["next"]) {
						//var url = response["paging"]["cursors"]["after"];
						//console.log(response.data);
						console.log("FLASLSLDASFAS");
						var url = response["paging"]["next"].split("https://graph.facebook.com");
						//console.log(url[1]);
						//s = "/v2.3/me/likes?after=" + url;
						s = url[1];
						console.log("Going to next page");
						console.log(s);
						//FB.setAccessToken(token);
						//process.nextTick(function() {
							FB.setAccessToken(refreshToken);
							FB.api(s, doSomethingelseForInbox);
						//});
						
					} else {
						str = j + "\n";
						
						console.log("Writing file");
						fs.appendFile('./log/messagesNumbers.txt', str, function (err) {
								if (err) {
									return console.log(err);
								}
						});
						
						//console.log(j);
					}

				} else {
					//Print out error message
					console.log(response);
				}
				
			}*/

FB.api(s , {'limit': '10'},  function (response) {
				//console.log(response.data);
				if (response && !response.error) {
					
					var i = 0;
					var str = "";
					//console.log("GOING through the response!!!");
					while(response.data[i]) {
						//var name = response.data[i].name + '\n';
						//console.log(i);
						var query = response.data[i].name;
						
						//console.log(response.data[i]);
						//console.log(i);
						// if you want to retrieve a full article set summaryOnly to false. 
						// Full article retrieval and parsing is still beta 
						
						/*
						var options = {query: query, format: "json", summaryOnly: true};
					
						wiki.searchArticle(options, function(err, htmlWikiText){
							if (err) {
								console.log("An error occurred[query=%s, error=%s]", query, err);
								return;
							}
							//console.log("Query successful[query=%s, html-formatted-wiki-text=%s]", query, htmlWikiText);
							//console.log(typeof htmlWikiText);
							
							//var parse = JSON.parse(htmlWikiText);

							if (htmlWikiText.indexOf('pageid') > -1) {
								//console.log(query);
								
								
								var titleIndex = htmlWikiText.indexOf('title') + 8;
								//console.log(htmlWikiText.indexOf('title'));
								
								var title = htmlWikiText.slice(titleIndex);
								
								var split = title.split('"');
								
								console.log(split[0]);
								
								console.log("Found page");
								
								//Store in array for final
								fs.appendFile('./log/foundpagelikes.txt', split[0] + '\n', function (err) {
									if (err) {
										return console.log(err);
									}
								});
							} else {
								//console.log(query);
								console.log("No page found");
							}
						});
						*/
						str = str + query + "\n";
						
						i++;
					}
					
					//Go to next page
					if (response["paging"]["next"] && response.data != []) {
						var url = response["paging"]["next"].split("https://graph.facebook.com");
						s = url[1];
						console.log("Going to next page");
						console.log(response["paging"]["next"]);
					} else {
						//done = true;
					}
					
					console.log("Writing file");
					fs.writeFile('./log/likesName.txt', str, function (err) {
							if (err) {
								return console.log(err);
							}
					});
						
				} else {
					//Print out error message
					console.log(response);
				}
			});